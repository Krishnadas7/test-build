name: Electron Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-electron:
    runs-on: windows-latest
    
    env:
      # Ensure we have the right environment variables for native modules
      ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true
      NODE_OPTIONS: --max-old-space-size=4096

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup for Visual Studio Build Tools
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup Visual C++ Build Tools
        shell: powershell
        run: |
          # Install Visual C++ Build Tools silently via Chocolatey
          choco install visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --includeRecommended --passive --norestart" -y
          
          # Update PATH to include MSBuild
          echo "Updated PATH to include MSBuild tools"

      - name: Install Windows Build Tools
        run: |
          npm config set msvs_version 2019
          npm config set python python3

      # Install GTK for Canvas/native dependencies
      - name: Install GTK runtime
        shell: powershell
        run: |
          Invoke-WebRequest -Uri https://github.com/tschoonj/GTK-for-Windows-Runtime-Environment-Installer/releases/download/2023-04-04/gtk3-runtime-3.24.34-2023-04-04-ts-win64.exe -OutFile gtk3-runtime.exe
          Start-Process -FilePath .\gtk3-runtime.exe -ArgumentList "/S" -Wait
          # Add GTK to PATH
          echo "C:\Program Files\GTK3-Runtime Win64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "GTK runtime installed and PATH updated"

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # Install dependencies with higher timeout and verbosity for troubleshooting
      - name: Install dependencies
        run: |
          npm config set msvs_version 2019
          npm config set python python3
          npm config set --global devdir $env:USERPROFILE\.electron-gyp
          npm config set --global python python3
          npm config set progress false
          npm install --verbose

      # Troubleshooting step to identify any potential build issues
      - name: Check Environment
        shell: powershell
        run: |
          Write-Host "Node version: $(node -v)"
          Write-Host "NPM version: $(npm -v)"
          Write-Host "System PATH: $env:PATH"
          npm config list
          # Check if we have the Visual C++ compiler available
          if (Test-Path "${env:VCToolsInstallDir}\bin\Hostx64\x64\cl.exe") {
            Write-Host "Visual C++ compiler found"
          } else {
            Write-Host "Visual C++ compiler not found in expected location"
          }

      # Build the Electron app
      - name: Build Electron App
        env:
          GYP_MSVS_VERSION: 2019
        run: npm run dist:win

      # Upload the built app as an artifact
      - name: Upload Windows Build
        uses: actions/upload-artifact@v3
        with:
          name: windows-exe
          path: |
            dist/*.exe
            dist/win-unpacked/
          retention-days: 7
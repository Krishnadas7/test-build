name: Electron Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-electron:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Install Required Build Tools
        shell: powershell
        run: |
          npm config set msvs_version 2019
          npm config set python python3
          npm install -g node-gyp

      # === ADD GTK Runtime Installation ===
      - name: Download and Install GTK Runtime
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://github.com/tschoonj/GTK-for-Windows-Runtime-Environment-Installer/releases/download/2023-03-10/gtk3-runtime-3.24.34-2023-03-10-ts-win64.exe" -OutFile "gtk3-runtime.exe"
          Start-Process -FilePath "./gtk3-runtime.exe" -ArgumentList "/S" -Wait

      - name: Set GTK Environment Variables
        shell: powershell
        run: |
          $env:GTK_ROOT="C:\Program Files\GTK3-Runtime Win64"
          $env:PATH = "$env:GTK_ROOT\bin;$env:PATH"
          $env:PKG_CONFIG_PATH = "$env:GTK_ROOT\lib\pkgconfig"
          $env:GTK_INCLUDE_DIR = "$env:GTK_ROOT\include"
          $env:GTK_LIB_DIR = "$env:GTK_ROOT\lib"
          Write-Host "GTK_ROOT set to $env:GTK_ROOT"
          # Check if cairo.h exists
          if (-Not (Test-Path "$env:GTK_INCLUDE_DIR\cairo\cairo.h")) {
            Write-Error "cairo.h not found! GTK runtime installation might have failed."
          }

      - name: Install dependencies
        run: npm install

      - name: Build Application
        run: |
          npm run transpile:electron
          npm run build
          npm run dist:win

      - name: Upload Windows Installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: release/*.exe

      - name: Upload Complete Release
        uses: actions/upload-artifact@v4
        with:
          name: complete-release
          path: release/
